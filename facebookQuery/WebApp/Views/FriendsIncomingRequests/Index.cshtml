
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using Constants.FriendTypesEnum
@model Services.ViewModels.FriendsModels.AnalizeFriendListViewModel

<div class="panel panel-default">
    <div class="page-header">
        <h3 class="alert-info alert">Incoming friends requests</h3> 
        <div class="inline-actions">
            <a href="@Url.Action("Index", "Friends", new { accountId = Model.AccountId})" class="btn btn-primary">Back</a>
        </div>
    </div>
    <div class="panel-footer">
        <table>
            <tr>
                <td>
                    <div class="alert alert-info">
                        To analize
                    </div>
                </td>
                <td>
                    <div class="alert alert-success">
                        To add
                    </div>
                </td>
                <td>
                    <div class="alert alert-danger">
                        To delete
                    </div>
                </td>
            </tr>
        </table>
        @{
            <div>Incoming (@Model.Friends.Where(model => model.Type == FriendTypes.Incoming).Count())</div>
            int incomingFriendCount = 1;
            foreach (var friend in @Model.Friends)
            {
                if (friend.Type == FriendTypes.Incoming)
                {
                     <div class="@(friend.Status == StatusesFriend.ToAdd ? "alert alert-success" : friend.Status == StatusesFriend.ToAnalys ? "alert alert-info" : "alert alert-danger")">
                         @incomingFriendCount.
                         <div class="inline-half-text-left">
                             <div class="message-list-tittle">
                                 <div class="">@friend.FriendName (@friend.FacebookId)</div>
                             </div>
                         </div>
                     </div>
                     incomingFriendCount++;
                 }
             }

        }
        
        @{<div>Recommended(@Model.Friends.Where(model => model.Type == FriendTypes.Recommended).Count())</div>
            int recommendedFriendCount = 1;
            foreach (var friend in @Model.Friends)
             {
                 if (friend.Type == FriendTypes.Recommended)
                 {
                     <div class="@(friend.Status == StatusesFriend.ToAdd ? "alert alert-success" : friend.Status == StatusesFriend.ToAnalys ? "alert alert-info" : "alert alert-danger")">
                         @recommendedFriendCount.
                         <div class="inline-half-text-left">
                             <div class="message-list-tittle">
                                 <div class="">@friend.FriendName (@friend.FacebookId)</div>
                             </div>
                         </div>
                     </div>
                     recommendedFriendCount++;
                 }
             }
        }
    </div>

    <div class="inline-actions">
        <a href="@Url.Action("Index", "Friends", new { accountId = Model.AccountId})" class="btn btn-primary">Back</a>
    </div>
</div>