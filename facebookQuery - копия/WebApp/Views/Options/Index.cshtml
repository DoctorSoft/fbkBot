@using Services.ViewModels.OptionsModel
@using WebApp.Resources.Views.MessageOptions
@{
    ViewBag.Title = "Index";
}

@model MessageListModel

<h2>@MessageOptionsTexts.MessageOptionsTitle</h2>

<div class="panel panel-default left-add-message-panel">
    <div class="panel-heading">
        <h3 class="panel-title">@MessageOptionsTexts.AddNewMessage</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("AddNewMessage", "Options", FormMethod.Post))
        {
            var model = new MessageViewModel();

            @Html.HiddenFor(listModel => listModel.AccountId);
            @Html.HiddenFor(listModel => listModel.GroupId);

            <div class="form-group input-group-sm">
                @MessageOptionsTexts.Text: @Html.TextAreaFor(o => model.Message, new { @class = "form-control" })
            </div>
            <div class="form-group input-group-sm">
                @MessageOptionsTexts.TimeFrom: @Html.TextBoxFor(o => model.StartTime, new { @class = "form-control datepicker" })
            </div>
            <div class="form-group input-group-sm">
                @MessageOptionsTexts.TimeTo: @Html.TextBoxFor(o => model.EndTime, new { @class = "form-control datepicker" })
            </div>
            <div class="form-group input-group-sm">
                @MessageOptionsTexts.AfterStopWords: @Html.CheckBoxFor(o => model.IsEmergencyText, new { @class = "form-control" })
            </div>
            <div class="form-group input-group-sm">
                @MessageOptionsTexts.NumberOfMessage: @Html.TextBoxFor(o => model.OrderNumber, new { @class = "form-control" })
            </div>
            <div class="form-group input-group-sm">
                @MessageOptionsTexts.ImportancyFactor: @Html.TextBoxFor(o => model.ImportancyFactor, new { @class = "form-control" })
            </div>
            <div class="form-group input-group-sm">
                @MessageOptionsTexts.BotStartsTalkFirst: @Html.CheckBoxFor(o => model.IsBotFirst, new { @class = "form-control" })
            </div>

            <div class="">
                <input type="submit" class="btn btn-success" value="@MessageOptionsTexts.ButtonAdd" />
            </div>
        }
    </div>
</div>

<div class="panel panel-default panel-group right-add-message-panel" id="accordion">

    <div class="panel-heading">
        <div class="message-list-tittle panel-heading">
            <h3 class="panel-title">
                @MessageOptionsTexts.CurrentGroup: <strong>@(Model.GroupId == null ? MessageOptionsTexts.GroupNotSelected : Model.GroupList.Groups.FirstOrDefault(@group => group.Id == @Model.GroupId).Name)</strong>
            </h3>
        </div>
        @if (Model.AccountId != null)
        {
            <div class="dropdown set-defaul-message">
                <button class="btn btn-default dropdown-toggle" type="button" id="settingsDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    <i class="fa fa-cogs"></i>
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" aria-labelledby="settingsDropdownMenu">
                    <li><a href="#" data-toggle="modal" data-target=".bd-example-modal-sm"><i class="fa fa-cubes"></i>@MessageOptionsTexts.SetDefaultSettings</a></li>
                    @foreach (var group in Model.GroupList.Groups)
                    {
                        <li><a href="@Url.Action("SetGroupMessages", "Options", new { accountId = Model.AccountId, groupId = group.Id })"><i class="fa fa-users"></i> @group.Name</a></li>
                    }
                </ul>
            </div>
        }
    </div>
    <div class="panel-body">

        @{
            <h4 class="dark-blue-label">@MessageOptionsTexts.BotStartsTalkingFirst</h4>

            var previousNumber = int.MinValue;

            foreach (var message in @Model.Messages.Where(model => model.IsBotFirst))
            {
                if (!string.IsNullOrWhiteSpace(message.Message))
                {
                    if (message.OrderNumber != previousNumber)
                    {
                        <div class="right-text">
                            <h5> Number of message: <strong>@message.OrderNumber</strong> </h5>
                        </div>
                        previousNumber = message.OrderNumber;
                    }

                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href='@("#collapse" + @message.Id)'>
                                    @(message.OrderNumber). @message.Message
                                </a>
                                <span class="remove-message">
                                    <a href="@Url.Action("RemoveMessage", "Options", new { messageId = message.Id, accountId = Model.AccountId, groupId = Model.GroupId })"><i class="fa fa-close" aria-hidden="true"></i></a>
                                </span>
                            </h4>
                        </div>
                        <div id='@("collapse" + @message.Id)' class="panel-collapse collapse">
                            <div class="panel-body">
                                @if ((message.StartTime == null || message.EndTime == null) && !message.IsEmergencyText)
                                {
                                    <div> No special conditions </div>
                                }
                                else
                                {
                                    if (message.StartTime != null && message.EndTime != null)
                                    {
                                        <div>Start time: @message.StartTime - End time: @message.EndTime</div>
                                    }
                                    if (message.IsEmergencyText)
                                    {
                                        <div class="message-emergency-warning">
                                            <i class="fa fa-info-circle"></i> It is message after catching stop word
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            }

            <h4 class="dark-blue-label">@MessageOptionsTexts.BotStartsTalkingSecond</h4>

            previousNumber = int.MinValue;

            foreach (var message in @Model.Messages.Where(model => !model.IsBotFirst))
            {
                if (!string.IsNullOrWhiteSpace(message.Message))
                {
                    if (message.OrderNumber != previousNumber)
                    {
                        <div class="right-text">
                            <h5> Number of message: <strong>@message.OrderNumber</strong> </h5>
                        </div>
                        previousNumber = message.OrderNumber;
                    }

                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href='@("#collapse" + @message.Id)'>
                                    @(message.OrderNumber). @message.Message
                                </a>
                                <span class="remove-message">
                                    <a href="@Url.Action("RemoveMessage", "Options", new { messageId = message.Id, accountId = Model.AccountId, groupId = Model.GroupId })"><i class="fa fa-close" aria-hidden="true"></i></a>
                                </span>
                            </h4>
                        </div>
                        <div id='@("collapse" + @message.Id)' class="panel-collapse collapse">
                            <div class="panel-body">
                                Start time: @message.StartTime - End time: @message.EndTime <br />
                                @if (message.IsEmergencyText)
                                {
                                    <div class="message-emergency-warning"><i class="fa fa-info-circle"></i> It is message after catching stop word</div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        }

    </div>
</div>

@*Modal to set default settings*@

<div class="modal fade bd-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel"><i class="fa fa-question-circle green-question"></i>@MessageOptionsTexts.ReturnToDefaultMessage?</h4>
            </div>
            <div class="modal-body">
                <i class="fa fa-warning green-question warning-message"></i>@MessageOptionsTexts.ReturnToDefaultMessage2.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@MessageOptionsTexts.ButtonCancel</button>
                <a href="@Url.Action("SetDefaultMessages", "Options", new { accountId = Model.AccountId })" class="btn btn-primary">OK</a>
            </div>
        </div>
    </div>
</div>